#!/bin/bash
# Shared functions between install and setup scripts

# shellcheck disable=SC2154
# prompt
# 1: message
# 2: messageType (green, progress, error, question, note, command)
# 3: set to disable echoing of newline
prompt() {
    case $2 in
    green) color="\e[32m" && m="$1!" ;;
    progress) color="\e[33m" && m="$1..." ;;
    error) color="\e[31m" && m="$1!" ;;
    question) color="\e[34m" && m="$1" ;;
    note) color="\e[36m" && m="[$1]";;
    command) color="\e[95m" && m="Executing: $1" ;;
    esac
    if [[ -n $3 ]]; then
        echo -en "$color $m\e[0m"
    else
        echo -e "$color $m\e[0m"
    fi
}

# shellcheck disable=SC2154
# out handles running commands and redirecting the output
out() {
    if [[ -n $logging ]]; then
        {
            echo "COMMAND: $*"
            "$@"
        } >>"$logFile" 2>&1
    else
        [[ -n $show ]] && prompt "$*" command
        "$@" 1>"$tmpOut" 2>"$tmpErr"

        # Log errors
        if [[ -s $tmpErr ]]; then
            echo "COMMAND: $*" >>"$errorfile"
            cat "$tmpErr" >>"$errorfile"
        fi
        # Verbose
        [[ -n $verbose ]] && [[ -s /tmp/out ]] && cat /tmp/out
    fi
}

# shellcheck disable=SC2154
# log_variable logs the contents of a variable to the variableLog if the debug flag is set
# 1: name of variable
# 2: content
log_variable() {
    [[ -n $debug ]] &&
        printf "=-=-=-=-=-=-=-=-=-=-= %s =-=-=-=-=-=-=-=-=-=-=\n%s\n" "$1" "$2" >>"$variableLog"
}
