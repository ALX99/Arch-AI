#!/bin/bash

swapP="+1G"
rootP="+10G"
locale="en_US.UTF-8"

# =========================== #
# Nothing to be modified here #
# =========================== #

uName=""
userPass=""
hostname=""
pkgs="base base-devel"

isEFI=false
fs=""

getConfig(){
    uName=$(dialog --inputbox "What username would you like?" 10 40  --output-fd 1)
    userPass=$(dialog --inputbox "What password would you like for $uName?" 10 40  --output-fd 1)
    hostname=$(dialog --inputbox "What hostname would you like?" 10 40  --output-fd 1)
    clear
}
getPkgs(){
    pacman -Qi dialog >/dev/null 2>&1
    if [[ $? -ne 0 ]]; then
        echo "Installing dialog..."
        pacman -S dialog --noconfirm >/dev/null 2>&1
    fi
    cmd=(dialog --separate-output --checklist "Select additional packages:" 20 40 15)
    args=(1 "Intel Ucode" off
          2 "AMD Ucode" off
          3 "PulseAudio" off
          4 "AlsaAudio" off)
    choices=$("${cmd[@]}" "${args[@]}" 2>&1 >/dev/tty)
    clear
    for choice in $choices; do
        case $choice in
            1) addPkg intel-ucode;;
            2) addPkg amd-ucode;;
            3) addPkg pulseaudio;;
            4) addPkg alsa-utils;;
        esac
    done
}
addPkg(){
    pkgs="$pkgs $1 "
}
checkEFI(){
    if [[ "$(ls -A /sys/firmware/efi/efivars/ 2>/dev/null)" ]]; then
        isEFI=true
    fi
    timedatectl set-ntp true
}
filesys(){
    tempFile=/tmp/counter.tmp
    echo 0 > $tempFile
    lsblk -T
    echo

    ls /dev/sd*[a-z] | while read i; do
        counter=$[$(cat $tempFile) + 1]
        echo $counter > $tempFile
        echo "$counter)" "$i"
    done
    numDrives=$(cat $tempFile)
    unlink $tempFile

    while [[ ! "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -gt "$numDrives" ] || [ "$choice" -le 0 ]; do
        read -r -p "Which drive would you like to install Arch on [1-"$numDrives"]: " choice
    done

    fs=$(ls /dev/sd*[a-z] | sed -n "$choice"p)

    if [ -z "$fs" ]; then
        echo "Something went wrong!"
        exit
    fi
}
mkpart(){
    echo n
    echo
    echo
    echo "$1"
}
# 1=bootloader, 2=swap, 3=root, 4=home
partition(){
    umount "$fs"?*
    (
    echo g
    if [ $isEFI ]; then
        mkpart "+512M"
    else
        mkpart "+200M"
    fi 
    mkpart "$swapP"
    mkpart "$rootP"
    mkpart 
    echo p 
    echo w
    ) | fdisk "$fs"

    umount /mnt
    mkfs.fat -F32 "$fs"1
    mkswap "$fs"2
    swapon "$fs"2
    mkfs.ext4 -F "$fs"3
    mkfs.ext4 -F "$fs"4
}
install(){
    mount "$fs"3 /mnt
    mkdir /mnt/home
    mount "$fs"4 /mnt/home
    reflector --protocol https --sort rate --save /mnt/etc/pacman.d/mirrorlist --verbose
    pacstrap "$pkgs"
    installPkgs
    genfstab -U /mnt >> /mnt/etc/fstab
}
basicSetup(){
arch-chroot /mnt /bin/env locale="$locale" hostname="$hostname" /bin/bash << "EOF"
pacman -S --noconfirm networkmanager
systemctl enable NetworkManager
pacman -Rns reflector --noconfirm
timeZ="$(curl -s "http://worldtimeapi.org/api/ip.txt" | grep timezone | awk '{print $2}')"
ln -sf /usr/share/"$timeZ"
hwclock --systohc
sed -i "/^#.* "$locale" /s/^#//" /etc/locale.gen
echo "LANG="$locale"" > /etc/locale.conf
locale-gen
echo "$hostname" > /etc/hostname
echo -e "127.0.0.1\t"$hostname"\n::1\t"$hostname"\n127.0.1.1\t"$hostname".local\t"$hostname"" > /etc/hosts
EOF
}
userSetup(){
arch-chroot /mnt /bin/env uName="$uName" userPass="$userPass" /bin/bash << "EOF"
useradd -m -G wheel $uName 
echo ""$uName" ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/"$uName"
echo "$uName":"$pw" | chpasswd
EOF
}
grubSetup(){
arch-chroot /mnt /bin/env fs="$fs" /bin/bash << "EOF"
pacman -S --noconfirm grub efibootmgr
mkdir /boot/efi
mount "$fs"1 /boot/efi
grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi
grub-mkconfig -o /boot/grub/grub.cfg
umount "$fs"1 
EOF
}
getConfig
getPkgs
filesys
partition
install
basicSetup
userSetup
grubSetup
